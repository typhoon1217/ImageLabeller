name: Release Label Editor

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Label Editor ${{ github.ref }}
          body: |
            ## Label Editor Release ${{ github.ref }}
            
            ### Downloads
            - Windows: Download `label-editor-windows-latest.zip`
            - Linux: Download `label-editor-ubuntu-latest.tar.gz`  
            - macOS: Download `label-editor-macos-latest.tar.gz`
            
            ### Requirements
            - **Linux**: GTK4, tesseract-ocr
            - **macOS**: GTK4 (via Homebrew), tesseract
            - **Windows**: GTK4 runtime, tesseract
            
            ### Installation
            1. Download the appropriate archive for your platform
            2. Extract the archive
            3. Run the executable:
               - Linux/macOS: `./LabelEditor`
               - Windows: `LabelEditor.exe`
            
            ### Features
            - Multi-platform GUI for image label editing
            - Bounding box creation and editing
            - OCR text extraction and editing
            - Keyboard shortcuts for efficient workflow
            - Auto-save functionality
            - Directory-based project management
            
            ---
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/v1.0.0...${{ github.ref }}
          draft: false
          prerelease: false

  build-and-upload:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python-version: '3.10'
            artifact-name: label-editor-linux-x64
            asset-name: label-editor-linux-x64.tar.gz
          - os: windows-latest
            python-version: '3.10'
            artifact-name: label-editor-windows-x64
            asset-name: label-editor-windows-x64.zip
          - os: macos-latest
            python-version: '3.10'
            artifact-name: label-editor-macos-x64
            asset-name: label-editor-macos-x64.tar.gz
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgirepository1.0-dev \
          libcairo2-dev \
          libpango1.0-dev \
          libgdk-pixbuf2.0-dev \
          libgtk-4-dev \
          gobject-introspection \
          tesseract-ocr \
          tesseract-ocr-eng
    
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install gtk4 gobject-introspection cairo pango gdk-pixbuf tesseract
    
    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install gtk-runtime -y
        choco install tesseract -y
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build executable
      run: |
        pyinstaller --clean --noconfirm build.spec
    
    - name: Create archive (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        cd dist
        tar -czf ../${{ matrix.asset-name }} .
    
    - name: Create archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd dist
        Compress-Archive -Path * -DestinationPath ../${{ matrix.asset-name }}
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./${{ matrix.asset-name }}
        asset_name: ${{ matrix.asset-name }}
        asset_content_type: application/octet-stream